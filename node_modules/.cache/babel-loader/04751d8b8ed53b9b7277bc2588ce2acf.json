{"ast":null,"code":"import { useState } from 'react';\nexport default function Http() {\n  function getToken() {\n    const token = localStorage.getItem('token');\n    return token !== null && token !== void 0 ? token : null;\n  }\n\n  ;\n  const [token, setToken] = useState(getToken());\n\n  function clearToken() {\n    localStorage.removeItem('token');\n    setToken(null);\n  }\n\n  function saveToken(t) {\n    if ((t === null || t === void 0 ? void 0 : t.status) === 'ok') {\n      localStorage.setItem('token', t.msg.token);\n      setToken(t.msg.token);\n    }\n  }\n\n  ;\n\n  function headers() {\n    return {\n      'Content-Type': 'application/json',\n      'Authorization': `Bearer ${token}`\n    };\n  }\n\n  ;\n\n  function unauthorized(data) {\n    var _data$msg;\n\n    if ((data === null || data === void 0 ? void 0 : data.status) === 'err' && (data === null || data === void 0 ? void 0 : (_data$msg = data.msg) === null || _data$msg === void 0 ? void 0 : _data$msg.info) === '401 Unauthorized') clearToken();\n  }\n\n  ;\n\n  async function logout() {\n    return fetch('/v1/logout', {\n      method: 'POST',\n      headers: headers()\n    }).then(data => clearToken()).catch(e => clearToken());\n  }\n\n  async function login(user) {\n    return fetch('/v1/login', {\n      method: 'POST',\n      headers: {\n        'Content-Type': 'application/json'\n      },\n      body: JSON.stringify(user)\n    }).then(data => data.json()).then(data => {\n      if ((data === null || data === void 0 ? void 0 : data.status) === 'ok') {\n        localStorage.setItem('token', data.msg.token);\n        setToken(data.msg.token);\n      } else clearToken();\n\n      return data;\n    }).catch(e => ({\n      'status': 'err',\n      'msg': {\n        'err': 'There is a problem on the server'\n      }\n    }));\n  }\n\n  return {\n    headers,\n    setToken: saveToken,\n    token,\n    login,\n    logout,\n    unauthorized\n  };\n}","map":{"version":3,"sources":["/home/andrey/projects/videowall/front/src/components/app/http.js"],"names":["useState","Http","getToken","token","localStorage","getItem","setToken","clearToken","removeItem","saveToken","t","status","setItem","msg","headers","unauthorized","data","info","logout","fetch","method","then","catch","e","login","user","body","JSON","stringify","json"],"mappings":"AAAA,SAASA,QAAT,QAAyB,OAAzB;AAEA,eAAe,SAASC,IAAT,GAAgB;AAC3B,WAASC,QAAT,GAAoB;AAChB,UAAMC,KAAK,GAAGC,YAAY,CAACC,OAAb,CAAqB,OAArB,CAAd;AACA,WAAOF,KAAP,aAAOA,KAAP,cAAOA,KAAP,GAAgB,IAAhB;AACH;;AAAA;AAED,QAAM,CAACA,KAAD,EAAQG,QAAR,IAAoBN,QAAQ,CAACE,QAAQ,EAAT,CAAlC;;AAEA,WAASK,UAAT,GAAsB;AAClBH,IAAAA,YAAY,CAACI,UAAb,CAAwB,OAAxB;AACAF,IAAAA,QAAQ,CAAC,IAAD,CAAR;AACH;;AAED,WAASG,SAAT,CAAmBC,CAAnB,EAAsB;AAClB,QAAI,CAAAA,CAAC,SAAD,IAAAA,CAAC,WAAD,YAAAA,CAAC,CAAEC,MAAH,MAAc,IAAlB,EAAwB;AACpBP,MAAAA,YAAY,CAACQ,OAAb,CAAqB,OAArB,EAA8BF,CAAC,CAACG,GAAF,CAAMV,KAApC;AACAG,MAAAA,QAAQ,CAACI,CAAC,CAACG,GAAF,CAAMV,KAAP,CAAR;AACH;AACJ;;AAAA;;AAED,WAASW,OAAT,GAAmB;AACf,WAAO;AACH,sBAAgB,kBADb;AAEH,uBAAkB,UAASX,KAAM;AAF9B,KAAP;AAIH;;AAAA;;AAED,WAASY,YAAT,CAAsBC,IAAtB,EAA4B;AAAA;;AACxB,QAAG,CAAAA,IAAI,SAAJ,IAAAA,IAAI,WAAJ,YAAAA,IAAI,CAAEL,MAAN,MAAiB,KAAjB,IAA0B,CAAAK,IAAI,SAAJ,IAAAA,IAAI,WAAJ,yBAAAA,IAAI,CAAEH,GAAN,wDAAWI,IAAX,MAAoB,kBAAjD,EACIV,UAAU;AACjB;;AAAA;;AAED,iBAAeW,MAAf,GAAwB;AACpB,WAAOC,KAAK,CAAC,YAAD,EAAe;AACvBC,MAAAA,MAAM,EAAE,MADe;AAEvBN,MAAAA,OAAO,EAAEA,OAAO;AAFO,KAAf,CAAL,CAINO,IAJM,CAIDL,IAAI,IAAIT,UAAU,EAJjB,EAKNe,KALM,CAKAC,CAAC,IAAIhB,UAAU,EALf,CAAP;AAMH;;AACD,iBAAeiB,KAAf,CAAqBC,IAArB,EAA2B;AACvB,WAAON,KAAK,CAAC,WAAD,EAAc;AACtBC,MAAAA,MAAM,EAAE,MADc;AAEtBN,MAAAA,OAAO,EAAE;AACL,wBAAgB;AADX,OAFa;AAKtBY,MAAAA,IAAI,EAAEC,IAAI,CAACC,SAAL,CAAeH,IAAf;AALgB,KAAd,CAAL,CAONJ,IAPM,CAODL,IAAI,IAAIA,IAAI,CAACa,IAAL,EAPP,EAQNR,IARM,CAQDL,IAAI,IAAI;AACV,UAAI,CAAAA,IAAI,SAAJ,IAAAA,IAAI,WAAJ,YAAAA,IAAI,CAAEL,MAAN,MAAiB,IAArB,EAA2B;AACvBP,QAAAA,YAAY,CAACQ,OAAb,CAAqB,OAArB,EAA8BI,IAAI,CAACH,GAAL,CAASV,KAAvC;AACAG,QAAAA,QAAQ,CAACU,IAAI,CAACH,GAAL,CAASV,KAAV,CAAR;AACH,OAHD,MAKII,UAAU;;AACd,aAAOS,IAAP;AACH,KAhBM,EAiBNM,KAjBM,CAiBAC,CAAC,KAAK;AAAC,gBAAU,KAAX;AAAkB,aAAO;AAAC,eAAO;AAAR;AAAzB,KAAL,CAjBD,CAAP;AAkBH;;AAED,SAAO;AACHT,IAAAA,OADG;AAEHR,IAAAA,QAAQ,EAAEG,SAFP;AAGHN,IAAAA,KAHG;AAIHqB,IAAAA,KAJG;AAKHN,IAAAA,MALG;AAMHH,IAAAA;AANG,GAAP;AAQH","sourcesContent":["import { useState } from 'react';\n\nexport default function Http() {\n    function getToken() {\n        const token = localStorage.getItem('token');\n        return token ?? null\n    };\n\n    const [token, setToken] = useState(getToken());\n\n    function clearToken() {\n        localStorage.removeItem('token')\n        setToken(null);\n    }\n\n    function saveToken(t) {\n        if (t?.status === 'ok') {\n            localStorage.setItem('token', t.msg.token);\n            setToken(t.msg.token);\n        }\n    };\n\n    function headers() {\n        return {\n            'Content-Type': 'application/json',\n            'Authorization': `Bearer ${token}`\n        }\n    };\n\n    function unauthorized(data) {\n        if(data?.status === 'err' && data?.msg?.info === '401 Unauthorized')\n            clearToken()\n    };\n\n    async function logout() {\n        return fetch('/v1/logout', {\n            method: 'POST',\n            headers: headers(),\n        })\n        .then(data => clearToken())\n        .catch(e => clearToken())\n    }\n    async function login(user) {\n        return fetch('/v1/login', {\n            method: 'POST',\n            headers: {\n                'Content-Type': 'application/json'\n            },\n            body: JSON.stringify(user)\n        })\n        .then(data => data.json())\n        .then(data => {\n            if (data?.status === 'ok') {\n                localStorage.setItem('token', data.msg.token);\n                setToken(data.msg.token);\n            }\n            else \n                clearToken()\n            return data\n        })\n        .catch(e => ({'status': 'err', 'msg': {'err': 'There is a problem on the server'}}))\n    }\n\n    return {\n        headers,\n        setToken: saveToken,\n        token,\n        login,\n        logout,\n        unauthorized,\n    }\n}\n"]},"metadata":{},"sourceType":"module"}